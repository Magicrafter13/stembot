# adapted from https://gitlab.matthewrease.net/matthew/ways

docker-build:
  image: docker:cli
  stage: build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        # Tag :git-tags on any branch
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
        docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
      else
        case "$CI_COMMIT_BRANCH" in
          "master") # Tag :latest on master
            docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
            docker push "$CI_REGISTRY_IMAGE:latest"
            ;;
          "develop") # Tag :develop on develop
            docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:develop"
            docker push "$CI_REGISTRY_IMAGE:develop"
            ;;
          *)
            echo "Branch $CI_COMMIT_BRANCH does not trigger a Docker push."
            ;;
        esac
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      exists:
        - Dockerfile
      when: always
    - if: '$CI_COMMIT_BRANCH == "develop"'
      exists:
        - Dockerfile
      when: always
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile
      when: always
    - when: never
  tags:
    - docker

deploy-stembot:
  stage: deploy
  environment:
    name: production
  before_script:
    - chmod 600 "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - ssh-kkeyscan $SSH_HOST >> ~/.ssh/known_hosts
  script:
    - ssh -i "$SSH_PRIVATE_KEY" "$SSH_USER@$SSH_HOST" "deploy $CI_COMMIT_TAG"
  rules:
    # Major (breaking) update
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.0$/ && $CI_COMMIT_REF_NAME == "master"'
      when: manual
    # Minor update
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+$/ && $CI_COMMIT_REF_NAME == "master"'
      when: always
    - when: never
